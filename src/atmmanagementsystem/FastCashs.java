/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atmmanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class FastCashs extends javax.swing.JFrame {

    /**
     * Creates new form FastCashs
     */
    public FastCashs() {
        initComponents();
         Connect();
    }
    int accountno;
    
    public FastCashs(int accountno){
       initComponents();
       Connect();
       this.accountno = accountno;
       /*accountnolbl.setText(""+accountno);*/
       GetBalance();
        
    }
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Statement stm = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void  Connect(){
          DBConnect dbc = new DBConnect();
        try {
                conn = dbc.connectToDB();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger( Customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger( Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    int oldBalance;
     private void GetBalance()
    {
        String query = "select balance from customersignup where accountno='"+accountno+"'";
         try {
             stm=conn.createStatement();
             rs = stm.executeQuery(query);
             if(rs.next()){
                  oldBalance=rs.getInt(1);
                  balancelbl.setText("BDT "+oldBalance);
                
             }
             else{
                  JOptionPane.showMessageDialog(this,"Wrong account number or pin");
             }
            
        } catch (SQLException e) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, e);
        }
        
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        backlbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rs100_btn = new javax.swing.JButton();
        rs1000_btn = new javax.swing.JButton();
        rs5000_btn = new javax.swing.JButton();
        rs500_btn = new javax.swing.JButton();
        rs2000_btn = new javax.swing.JButton();
        rs10000_btn = new javax.swing.JButton();
        balancelbl = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        logoutbtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        backlbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backlbl.setForeground(new java.awt.Color(255, 0, 51));
        backlbl.setText("x");
        backlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backlblMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("MoneySplosh ATM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(backlbl)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(backlbl)
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(0, 37, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 255, 255));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("FAST CASH");

        rs100_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs100_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs100_btn.setText("BDT 100");
        rs100_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs100_btnActionPerformed(evt);
            }
        });

        rs1000_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs1000_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs1000_btn.setText("BDT 1000");
        rs1000_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs1000_btnActionPerformed(evt);
            }
        });

        rs5000_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs5000_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs5000_btn.setText("BDT 5000");
        rs5000_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs5000_btnActionPerformed(evt);
            }
        });

        rs500_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs500_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs500_btn.setText("BDT 500");
        rs500_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs500_btnActionPerformed(evt);
            }
        });

        rs2000_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs2000_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs2000_btn.setText("BDT 2000");
        rs2000_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs2000_btnActionPerformed(evt);
            }
        });

        rs10000_btn.setBackground(new java.awt.Color(255, 255, 204));
        rs10000_btn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        rs10000_btn.setText("BDT 10000");
        rs10000_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs10000_btnActionPerformed(evt);
            }
        });

        balancelbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        balancelbl.setText("Balance");

        backbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backbtn.setText("Back");
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });

        logoutbtn.setBackground(new java.awt.Color(255, 153, 153));
        logoutbtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        logoutbtn.setText("LOG OUT");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rs100_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rs5000_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(340, 340, 340))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rs1000_btn)
                        .addGap(113, 113, 113)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(logoutbtn))
                            .addComponent(balancelbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(rs2000_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addComponent(rs500_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(rs10000_btn))
                .addGap(105, 105, 105))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(balancelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rs100_btn)
                            .addComponent(rs500_btn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rs1000_btn)
                            .addComponent(rs10000_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rs5000_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                            .addComponent(rs2000_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(63, 63, 63)
                        .addComponent(backbtn)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(logoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rs100_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs100_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<100){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-100 );
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',100,,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
             
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs100_btnActionPerformed

    private void rs1000_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs1000_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<1000){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-1000 );
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',1000,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs1000_btnActionPerformed

    private void rs5000_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs5000_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<5000){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-5000);
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',5000,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs5000_btnActionPerformed

    private void rs500_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs500_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<500){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-500);
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',500,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs500_btnActionPerformed

    private void rs2000_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs2000_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<2000){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-2000);
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',2000,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs2000_btnActionPerformed

    private void rs10000_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs10000_btnActionPerformed
        // TODO add your handling code here:
        if(oldBalance<10000){
           JOptionPane.showMessageDialog(this,"Not Enough Balance"); 
        }
          else {
             try {
                 String query = "update customersignup set balance=? where accountno=?";
                 pst=conn.prepareStatement(query);
                 pst.setInt(1,oldBalance-10000 );
                 pst.setInt(2,accountno );
                 if(pst.executeUpdate()==1){
                     JOptionPane.showMessageDialog(this,"Balance updated");
                     Date date = new Date();
                     String dates=date.toString();
                     String q = "insert into TransactionTbl values('"+accountno+"','Fast Cash',10000,'"+dates+"')";
                     pst=conn.prepareStatement(q);
                     pst.executeUpdate();
                 }else{
                     JOptionPane.showMessageDialog(this,"Missing information");
                 }
             
            
        } catch (Exception e) {
            Logger.getLogger(Deposits.class.getName()).log(Level.SEVERE, null, e);
        }
            
        }
    }//GEN-LAST:event_rs10000_btnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void backlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backlblMouseClicked
        // TODO add your handling code here:
         this.setVisible(false);
        new MainMenu(accountno).setVisible(true);
    }//GEN-LAST:event_backlblMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new MainMenu(accountno).setVisible(true);
    }//GEN-LAST:event_backbtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastCashs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastCashs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastCashs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastCashs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FastCashs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backbtn;
    private javax.swing.JLabel backlbl;
    private javax.swing.JLabel balancelbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JButton rs10000_btn;
    private javax.swing.JButton rs1000_btn;
    private javax.swing.JButton rs100_btn;
    private javax.swing.JButton rs2000_btn;
    private javax.swing.JButton rs5000_btn;
    private javax.swing.JButton rs500_btn;
    // End of variables declaration//GEN-END:variables
}
